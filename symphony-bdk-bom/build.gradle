plugins {
    id 'java-platform'
    id 'maven-publish'
    id 'signing'
}

description = 'Symphony Java BDK Bom (Bill Of Materials)'

javaPlatform {
    allowDependencies()
}

repositories {
    mavenCentral()
}

dependencies {
    // import Spring Boot's BOM
    api platform('org.springframework.boot:spring-boot-dependencies:3.3.7')
    // import Jackson's BOM
    api platform('com.fasterxml.jackson:jackson-bom:2.18.2')
    // import Jersey's BOM
    api platform('org.glassfish.jersey:jersey-bom:3.1.9')
    // import Log4j's BOM
    api platform('org.apache.logging.log4j:log4j-bom:2.24.2')

    // define all our dependencies versions
    constraints {
        // Internal modules dependencies (Keep them first)
        api "org.finos.symphony.bdk:symphony-bdk-core:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-config:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-extension-api:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-http-api:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-http-jersey2:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-http-webclient:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-core-spring-boot-starter:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-app-spring-boot-starter:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-template-api:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-template-freemarker:$project.version"
        api "org.finos.symphony.bdk:symphony-bdk-template-handlebars:$project.version"
        // extensions
        api "org.finos.symphony.bdk.ext:symphony-group-extension:$project.version"

        // External dependencies

        api 'org.apiguardian:apiguardian-api:1.1.2'

        api 'org.slf4j:slf4j-api:2.0.9'
        api 'org.slf4j:slf4j-log4j12:2.0.9'

        api 'commons-io:commons-io:2.18.0'
        api 'commons-codec:commons-codec:1.17.1'
        api 'commons-beanutils:commons-beanutils:1.9.4'
        api 'org.apache.commons:commons-lang3:3.17.0'
        api 'org.apache.commons:commons-text:1.12.0'
        api 'commons-logging:commons-logging:1.3.4'
        api 'com.brsanthu:migbase64:2.2'
        api 'io.jsonwebtoken:jjwt:0.9.1'
        api 'org.bouncycastle:bcpkix-jdk18on:1.79'
        api 'com.google.code.findbugs:jsr305:3.0.2'

        api 'io.github.resilience4j:resilience4j-retry:2.2.0'

        api 'io.swagger:swagger-annotations:1.6.14'
        api 'org.openapitools:jackson-databind-nullable:0.2.6'

        api 'org.projectreactor:reactor-spring:1.0.1.RELEASE'

        api 'org.freemarker:freemarker:2.3.33'
        api 'com.github.jknack:handlebars:4.3.1'
        api 'org.reflections:reflections:0.10.2'

        api 'org.junit.jupiter:junit-jupiter:5.10.1'
        api 'org.junit.jupiter:junit-jupiter-api:5.10.1'
        api 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
        api 'com.tngtech.archunit:archunit-junit5:1.2.1'
        api 'org.mock-server:mockserver-netty:5.15.0'
        api 'org.mockito:mockito-core:5.8.0'
        api 'org.mockito:mockito-junit-jupiter:5.8.0'
        api 'org.assertj:assertj-core:3.24.2'

        api 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
        api 'jakarta.validation:jakarta.validation-api:3.0.2'
    }
}

publishing {
    publications {
        bom(MavenPublication) {
            from components.javaPlatform
            pom(rootProject.ext.pomDefinition)
            pom {
                name = project.name
                description = project.description
            }
        }
    }

    repositories {
        maven {
            credentials {
                username rootProject.ext.mavenRepoUsername
                password rootProject.ext.mavenRepoPassword
            }
            url rootProject.ext.mavenRepoUrl
        }
    }
}

signing {
    required { rootProject.isReleaseVersion }
    sign publishing.publications.bom
}
